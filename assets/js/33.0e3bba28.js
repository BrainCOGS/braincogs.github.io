(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{276:function(e,t,i){e.exports=i.p+"assets/img/Menu_task_scheduler.12db0039.png"},277:function(e,t,i){e.exports=i.p+"assets/img/Trigger_tab_task_scheduler.d1fe7432.png"},478:function(e,t,i){e.exports=i.p+"assets/img/training_gui_pupillometry.85699e0d.png"},479:function(e,t,i){e.exports=i.p+"assets/img/pupillometry_DB_erd.55c680c5.png"},530:function(e,t,i){"use strict";i.r(t);var s=i(10),a=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"frontmatter-title"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[e._v("#")]),e._v(" "+e._s(e.$frontmatter.title))]),e._v(" "),t("ul",[t("li",[e._v("This documentation will guide the researcher through the process of register, monitor & review pupillometry data.")])]),e._v(" "),t("h2",{attrs:{id:"instructions-to-set-up-pupillometry-pipeline-on-a-rig-machine"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#instructions-to-set-up-pupillometry-pipeline-on-a-rig-machine"}},[e._v("#")]),e._v(" Instructions to Set up Pupillometry Pipeline on a Rig Machine")]),e._v(" "),t("ol",[t("li",[e._v("Ask your lab manager for helo to set up a camera in the rig.")]),e._v(" "),t("li",[e._v("If needed, add these parameters in "),t("strong",[e._v("RigParameters.m")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("%% Pupilometry video parameters\nvideo_parent_path               =   'E:/VideoData'\nvideo_ext                       =   '.mj2'\nvideo_acquisition_rate          =   30\nvideo_record                    =   true\nvideo_gain                      =   8\npreview                         =   true\n")])])]),t("ol",{attrs:{start:"3"}},[t("li",[e._v("In Tranining GUI subject task selection menu, under "),t("code",[e._v("PupillometryVideo")]),e._v(" select "),t("code",[e._v("2. In RigParameters")]),e._v(":")])]),e._v(" "),t("figure",[t("img",{attrs:{src:i(478)}}),e._v(" "),t("center",[t("figcaption",[e._v("Training GUI for pupillometry")])])],1),e._v(" "),t("ol",{attrs:{start:"4"}},[t("li",[e._v("In Experiment file add the following lines in "),t("code",[e._v("initializationcodeFun")]),e._v(" function (just after "),t("code",[e._v("vr = initializeGradedExperiment(vr);")]),e._v(" line):")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("% Start video acquisition\nif ~isempty(vr.trainee.pupillometryVideo) && vr.trainee.pupillometryVideo ~= 1\n    vr = startVideoAcquisition(vr);\nend\n")])])]),t("ol",{attrs:{start:"5"}},[t("li",[e._v("In Experiment file add the following lines in "),t("code",[e._v("runtimeCodeFun")]),e._v(" function (just after "),t("code",[e._v("catch err displayException(err);")]),e._v(" line):")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("% Stop video acquisition\nif ~isempty(vr.trainee.pupillometryVideo) && vr.trainee.pupillometryVideo ~= 1\n        vr = stopVideoAcquisition(vr);\nend\n")])])]),t("ol",{attrs:{start:"6"}},[t("li",[e._v("In Experiment file add the following lines in "),t("code",[e._v("terminationCodeFun")]),e._v(" function (the very first line):")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("% Stop video acquisition\nif ~isempty(vr.trainee.pupillometryVideo) && vr.trainee.pupillometryVideo ~= 1\n        vr = stopVideoAcquisition(vr);\nend\n")])])]),t("h3",{attrs:{id:"pupillometry-backup-videos-task-schedule"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pupillometry-backup-videos-task-schedule"}},[e._v("#")]),e._v(" Pupillometry backup videos task schedule")]),e._v(" "),t("ol",[t("li",[e._v("On Windows type "),t("strong",[e._v('"Task Scheduler"')])]),e._v(" "),t("li",[e._v("Open "),t("strong",[e._v("Task Scheduler")]),e._v(' "App"')]),e._v(" "),t("li",[e._v("On right hand side menu, click on "),t("strong",[e._v('"Create Task"')]),e._v(" Action")])]),e._v(" "),t("figure",[t("img",{attrs:{src:i(276)}}),e._v(" "),t("center",[t("figcaption",[e._v("Task scheduler menu")])])],1),e._v(" "),t("ol",{attrs:{start:"4"}},[t("li",[e._v("Name new task as "),t("strong",[e._v("video_backup")])]),e._v(" "),t("li",[e._v("Add a trigger to run task daily at 11:30 pm")])]),e._v(" "),t("figure",[t("img",{attrs:{src:i(277)}}),e._v(" "),t("center",[t("figcaption",[e._v("Task scheduler Trigger Tab")])])],1),e._v(" "),t("ol",{attrs:{start:"6"}},[t("li",[e._v("Add an action: add this line to the Program/script edit: "),t("code",[e._v("C:\\Experiments\\U19-pipeline-matlab\\scripts\\cmd_copy_video_files")])]),e._v(" "),t("li",[e._v("Hit "),t("strong",[e._v("OK")]),e._v(" button")])]),e._v(" "),t("h2",{attrs:{id:"pupillometry-db-and-data-organization"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pupillometry-db-and-data-organization"}},[e._v("#")]),e._v(" Pupillometry DB and data organization")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("Raw data (video files) are located in: "),t("code",[e._v("\\\\cup.pni.princeton. edu\\braininit\\Data\\Raw\\video_pupillometry\\(userid)\\(subjectfullname)\\(session_date)_g(session_number)\\(video_file)")])])]),e._v(" "),t("li",[t("p",[e._v("Processed data (h5 files) are located in: "),t("code",[e._v("\\\\cup.pni.princeton. edu\\braininit\\Data\\Processed\\video_pupillometry\\(userid)\\(subjectfullname)\\(session_date)_g(session_number)\\(h5_file)")])])]),e._v(" "),t("li",[t("p",[e._v("Video models are located in: "),t("code",[e._v("\\\\cup.pni.princeton. edu\\braininit\\Data\\Raw\\video_models\\(video_model_directory)")])])]),e._v(" "),t("li",[t("p",[e._v("Check "),t("a",{attrs:{href:"https://braincogs.github.io/software/db_organization.html#_9-u19-pupillometry"}},[e._v(" DB Organization (pupillometry) ")]),e._v(" for a description for each pupillometry table.")])])]),e._v(" "),t("figure",[t("img",{attrs:{src:i(479)}}),e._v(" "),t("center",[t("figcaption",[e._v("Pupillometry pipeline DB schema")])])],1),e._v(" "),t("h2",{attrs:{id:"steps-executed-in-pupillometry-pipeline"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#steps-executed-in-pupillometry-pipeline"}},[e._v("#")]),e._v(" Steps executed in Pupillometry pipeline")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("When "),t("code",[e._v("pupillometry_video -> 2. In RigParameters ")]),e._v(" is selected in training GUI a new "),t("code",[e._v("session_video")]),e._v(" record is registered in the DB while ingesting Session. ("),t("a",{attrs:{href:"https://github.com/BrainCOGS/U19-pipeline-matlab/blob/master/schemas/%2Bacquisition/Session.m#L135"}},[e._v("Code here")]),e._v(")")])]),e._v(" "),t("li",[t("p",[e._v("The "),t("code",[e._v("cmd_copy_video_files")]),e._v(" task scheduler takes "),t("code",[e._v("session_video")]),e._v(" records and store new videos in this location: "),t("code",[e._v("\\\\cup.pni.princeton. edu\\braininit\\Data\\Raw\\video_pupillometry\\(userid)\\(subjectfullname)\\(session_date)_g(session_number)\\(video_file)")]),e._v(". "),t("a",{attrs:{href:"https://github.com/BrainCOGS/U19-pipeline-matlab/blob/master/scripts/cmd_copy_behavior_files.BAT"}},[e._v("Script run by pupillometry backup videos task schedule")])])]),e._v(" "),t("li",[t("p",[e._v("During night cronjob: if video is found on cup location:")])])]),e._v(" "),t("ul",[t("li",[e._v("Populate "),t("code",[e._v("pupillometry_session")]),e._v(" table")]),e._v(" "),t("li",[e._v("Execute sync behavior code for video. "),t("a",{attrs:{href:"https://github.com/BrainCOGS/U19-pipeline-matlab/blob/master/schemas/%2Bpupillometry/PupillometrySyncBehavior.m"}},[e._v(" Code here")]),e._v(".")]),e._v(" "),t("li",[e._v("Register default model to process video in "),t("code",[e._v(" pupillometry_session_model")]),e._v(" and "),t("code",[e._v("pupillometry_session_model_data")]),e._v(".")])]),e._v(" "),t("ol",{attrs:{start:"4"}},[t("li",[e._v("Queue/Checks job in "),t("code",[e._v("spockvm2")])])]),e._v(" "),t("ul",[t("li",[t("p",[e._v("Similar to ephys/imaging automation pipeline, pupillometry pipeline has a main (more simple) class to process all pupillometry jobs called "),t("code",[e._v("PupillometryProcessingHandler")]),e._v(". This class is located "),t("a",{attrs:{href:"https://github.com/BrainCOGS/U19-pipeline_python/blob/master/u19_pipeline/automatic_job/pupillometry_handler.py"}},[e._v(" here ")]),e._v(".")])]),e._v(" "),t("li",[t("p",[e._v("Execute "),t("a",{attrs:{href:"https://github.com/BrainCOGS/U19-pipeline_python/blob/master/u19_pipeline/automatic_job/call_pupillometry_queue_jobs.sh"}},[e._v("pupillometry_queue_jobs script")]),e._v(". This scripts calls "),t("code",[e._v("PupillometryProcessingHandler.check_pupillometry_sessions_queue")]),e._v(" function. Queues a processing job to all sessions where a model was registered.")])]),e._v(" "),t("li",[t("p",[e._v("Execute "),t("a",{attrs:{href:"https://github.com/BrainCOGS/U19-pipeline_python/blob/master/u19_pipeline/automatic_job/call_pupillometry_check_jobs.sh"}},[e._v("pupillometry_check_jobs script")]),e._v(". This scripts calls "),t("code",[e._v("PupillometryProcessingHandler.check_processed_pupillometry_sessions")]),e._v(" function. If processing job is finished get final result (pupil_diameter) and stores it in  "),t("code",[e._v("pupillometry_session_model_data")]),e._v(" table.")])])]),e._v(" "),t("h2",{attrs:{id:"monitor-pupillometry-processing-sessions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#monitor-pupillometry-processing-sessions"}},[e._v("#")]),e._v(" Monitor pupillometry processing sessions")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("A few MATLAB functions were built to check how pupillometry jobs are doing:")])]),e._v(" "),t("li",[t("p",[e._v("Get processed data from a session:")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("key = struct('subject_fullname', 'efonseca_ef317_act116', 'session_date', '2024-02-21')\npupillometry_data = fetch(pupillometry.PupillometrySessionModelData * pupillometry.PupillometrySyncBehavior & key, '*')\npupillometry_data = \n\n  struct with fields:\n\n           subject_fullname: 'efonseca_ef317_act116'\n               session_date: '2024-02-21'\n             session_number: 0\n                   model_id: 2\n        pupillometry_job_id: 2984\n             pupil_diameter: [108177×1 double]\n    sync_video_frame_matrix: [108177×4 single]\n       sync_behavior_matrix: [150227×5 single]\n")])])]),t("p",[t("strong",[e._v("pupil_diameter")]),e._v(": Pupil diameter for each video frame."),t("br"),e._v(" "),t("strong",[e._v("sync_video_frame_matrix")]),e._v(": Time & Block/Trial/Iteration for each video frame."),t("br"),e._v(" "),t("strong",[e._v("sync_behavior_matrix")]),e._v(": Time & video frame for each Block/Trial/Iteration.")]),e._v(" "),t("ul",[t("li",[e._v("Restart processing for failed processing\nSometimes processing fails for external factors (processing system was down, model was not properly selected, etc). As a first attempt to solve the issue a restart processing function was created:")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("psmd = pupillometry.PupillometrySessionModelData()\nkey = struct('subject_fullname', 'efonseca_ef317_act116', 'session_date', '2024-02-21')\npsmd.restart_pupillometry_failed_job(key)\n")])])]),t("p",[e._v("If processing fails again, contact Software Developer and check "),t("code",[e._v("#automation_pipeline_errors")]),e._v(" slack channel for more information about the error.")]),e._v(" "),t("ul",[t("li",[e._v("Check status for all sessions:")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("psmd = pupillometry.PupillometrySessionModelData()\nall_sessions_table = psmd.check_status_pupillometry_jobs()\n")])])]),t("ul",[t("li",[e._v("Check status for a specific session(s):")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("psmd = pupillometry.PupillometrySessionModelData()\nkey = struct('subject_fullname', 'efonseca_ef317_act116', 'session_date', '2024-02-21')\nsession_status = psmd.check_status_pupillometry_jobs(key)\n")])])]),t("ul",[t("li",[e._v("Get all succesfully processed sessions:")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("psmd = pupillometry.PupillometrySessionModelData()\npupillometry_finished_sessions = psmd.get_finished_jobs_pupillometry()\n")])])]),t("h2",{attrs:{id:"add-a-new-video-model-to-the-pipeline"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#add-a-new-video-model-to-the-pipeline"}},[e._v("#")]),e._v(" Add a new video model to the pipeline")]),e._v(" "),t("h2",{attrs:{id:""}},[t("a",{staticClass:"header-anchor",attrs:{href:"#"}},[e._v("#")])]),e._v(" "),t("h2",{attrs:{id:"review-processed-data"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#review-processed-data"}},[e._v("#")]),e._v(" Review processed data")])])}),[],!1,null,null,null);t.default=a.exports}}]);